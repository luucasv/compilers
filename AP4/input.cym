int add(int a, int b) {
    return a + b;
}

int mul(int a, int b) {
    return a * b;
}

int square(int x) {
    return x * x;
}

int factorial(int x) {
    if (x <= 1) {
        return 1;
    } else {
        return x * factorial(x - 1);
    }
}

int fibonacci(int x) {
    if (x <= 1) {
        return x;
    } else {
        return fibonacci(x - 2) + fibonacci(x - 1);
    }
}

int fibonorial(int x) {
    if (x == 0) {
        return 1;
    } else {
        return fibonacci(x) * fibonorial(x - 1);
    }
}

int max(int a, int b) {
    int nmax = b;
    if (a > b) {
        nmax = a;
    }
    
    return nmax;
}

int even(int n) {
    return (n - ((n / 2) * 2));
}

int collatz(int n) {
    if (n == 1) {
        return 1;
    } else if (even(n) == 0) {
        return 1 + collatz(n / 2);
    } else {
        return 1 + collatz(3 * n + 1);
    }
}

void main( ) {
    int x;
    int y;
    x = 2;
    y = 3;
    println(x);
    println(y);
    
    int sum = add(x, y);
    println(sum);
    
    int sqrSum = add(square(x), add(mul(2, mul(x, y)), square(y)));
    println(sqrSum);
    
    int fat = factorial(sum);
    int fbr = fibonorial(sum);
    int ctz = collatz(sum);
    
    println(max(fat, fbr));
    println(max(fat, ctz));
    println(max(fbr, ctz));
}
