package application;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.tree.*;

import autogenerated.*;
import walker.CymbolGenerationVisitor;
import walker.FunctionManager;
import walker.CodeGenerator;
import walker.CymbolFunctionsVisitor;

public class CodeGenerationApplicationVisitor {
	public static ANTLRInputStream getStandardInputStream() throws IOException {
		return (new ANTLRInputStream(System.in));
	}
	
	public static ANTLRInputStream getFileInputStream(String filePath) throws IOException {
		return (new ANTLRFileStream(filePath));
	}
	
	public static void main(String[] args) throws IOException {
		ANTLRInputStream input = getFileInputStream("input.cym");
		CymbolLexer lexer = new CymbolLexer(input);
		CommonTokenStream tokens = new CommonTokenStream(lexer);
		CymbolParser parser = new CymbolParser(tokens);
		ParseTree tree = parser.file();
		
		CymbolFunctionsVisitor functionsVisitor = new CymbolFunctionsVisitor();
		FunctionManager functionManager = tree.accept(functionsVisitor);

		CymbolGenerationVisitor generationVisitor = new CymbolGenerationVisitor(functionManager);
		CodeGenerator code = tree.accept(generationVisitor);
		printToFile(code.getCode(), "output.il");
		System.out.println("Codigo CIL gerado com sucesso!");
	}

	static void printToFile(String fileData, String filename) throws FileNotFoundException {
		PrintStream outstream = new PrintStream(new FileOutputStream(filename));
		outstream.print(fileData);
		outstream.close();
	}
}
